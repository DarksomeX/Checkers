private boolean AttackExist(int i) {
        if (MyCheckers[i].exist) {
            if (MyCheckers[i].isKing) {
                int dist = 1;
                while (true) {
                    if ((MyCheckers[i].i + (dist + 1) < 0) || (MyCheckers[i].i + (dist + 1) > 7) || (MyCheckers[i].j + (dist + 1) < 0) || (MyCheckers[i].j + (dist + 1) > 7)) {
                        break;
                    }
                    if ((Desk[MyCheckers[i].i + dist][MyCheckers[i].j + dist] == MyPlayerID) || (Desk[MyCheckers[i].i + dist][MyCheckers[i].j + dist] == -EnemyPlayerID)) {
                        break;
                    }

                    if (Desk[MyCheckers[i].i + dist][MyCheckers[i].j + dist] == EnemyPlayerID) {
                        if ((Desk[MyCheckers[i].i + (dist + 1)][MyCheckers[i].j + (dist + 1)] != 0)) {
                            break;
                        }
                        return true;
                    }
                    dist++;
                }

                dist = 1;
                while (true) {
                    if ((MyCheckers[i].i - (dist + 1) < 0) || (MyCheckers[i].i - (dist + 1) > 7) || (MyCheckers[i].j - (dist + 1) < 0) || (MyCheckers[i].j - (dist + 1) > 7)) {

                        break;
                    }
                    if ((Desk[MyCheckers[i].i - dist][MyCheckers[i].j - dist] == MyPlayerID) || (Desk[MyCheckers[i].i - dist][MyCheckers[i].j - dist] == -EnemyPlayerID)) {
                        break;
                    }

                    if (Desk[MyCheckers[i].i - dist][MyCheckers[i].j - dist] == EnemyPlayerID) {
                        if ((Desk[MyCheckers[i].i - (dist + 1)][MyCheckers[i].j - (dist + 1)] != 0)) {
                            break;
                        }
                        return true;
                    }
                    dist++;
                }

                dist = 1;
                while (true) {
                    if ((MyCheckers[i].i + (dist + 1) < 0) || (MyCheckers[i].i + (dist + 1) > 7) || (MyCheckers[i].j - (dist + 1) < 0) || (MyCheckers[i].j - (dist + 1) > 7)) {

                        break;
                    }
                    if ((Desk[MyCheckers[i].i + dist][MyCheckers[i].j - dist] == MyPlayerID) || (Desk[MyCheckers[i].i + dist][MyCheckers[i].j - dist] == -EnemyPlayerID)) {
                        break;
                    }

                    if (Desk[MyCheckers[i].i + dist][MyCheckers[i].j - dist] == EnemyPlayerID) {
                        if ((Desk[MyCheckers[i].i + (dist + 1)][MyCheckers[i].j - (dist + 1)] != 0)) {
                            break;
                        }
                        return true;
                    }
                    dist++;
                }

                dist = 1;
                while (true) {
                    if ((MyCheckers[i].i - (dist + 1) < 0) || (MyCheckers[i].i - (dist + 1) > 7) || (MyCheckers[i].j + (dist + 1) < 0) || (MyCheckers[i].j + (dist + 1) > 7)) {

                        break;
                    }
                    if ((Desk[MyCheckers[i].i - dist][MyCheckers[i].j + dist] == MyPlayerID) || (Desk[MyCheckers[i].i - dist][MyCheckers[i].j + dist] == -EnemyPlayerID)) {
                        break;
                    }

                    if (Desk[MyCheckers[i].i - dist][MyCheckers[i].j + dist] == EnemyPlayerID) {
                        if ((Desk[MyCheckers[i].i - (dist + 1)][MyCheckers[i].j + (dist + 1)] == MyPlayerID) || (Desk[MyCheckers[i].i - (dist + 1)][MyCheckers[i].j + (dist + 1)] == -EnemyPlayerID) || (Desk[MyCheckers[i].i - (dist + 1)][MyCheckers[i].j + (dist + 1)] == EnemyPlayerID)) {
                            break;
                        }

                        return true;
                    }
                    dist++;
                }

            } else {
                if ((MyCheckers[i].i - 1 >= 0) && (MyCheckers[i].j - 1 >= 0) && (MyCheckers[i].i - 1 <= 7) && (MyCheckers[i].j - 1 <= 7)) {
                    if (Desk[MyCheckers[i].i - 1][MyCheckers[i].j - 1] == EnemyPlayerID) {
                        if ((MyCheckers[i].i - 2 >= 0) && (MyCheckers[i].j - 2 >= 0) && (MyCheckers[i].i - 2 <= 7) && (MyCheckers[i].j - 2 <= 7) && (Desk[MyCheckers[i].i - 2][MyCheckers[i].j - 2] == 0)) {
                            if (Desk[MyCheckers[i].i - 2][MyCheckers[i].j - 2] == 0) {
                                return true;
                            }
                        }
                    }
                }

                if ((MyCheckers[i].i + 1 >= 0) && (MyCheckers[i].j + 1 >= 0) && (MyCheckers[i].i + 1 <= 7) && (MyCheckers[i].j + 1 <= 7)) {
                    if (Desk[MyCheckers[i].i + 1][MyCheckers[i].j + 1] == EnemyPlayerID) {
                        if ((MyCheckers[i].i + 2 >= 0) && (MyCheckers[i].j + 2 >= 0) && (MyCheckers[i].i + 2 <= 7) && (MyCheckers[i].j + 2 <= 7) && (Desk[MyCheckers[i].i + 2][MyCheckers[i].j + 2] == 0)) {
                            if (Desk[MyCheckers[i].i + 2][MyCheckers[i].j + 2] == 0) {
                                return true;
                            }
                        }
                    }
                }

                if ((MyCheckers[i].i - 1 >= 0) && (MyCheckers[i].j + 1 >= 0) && (MyCheckers[i].i - 1 <= 7) && (MyCheckers[i].j + 1 <= 7)) {
                    if (Desk[MyCheckers[i].i - 1][MyCheckers[i].j + 1] == EnemyPlayerID) {
                        if ((MyCheckers[i].i - 2 >= 0) && (MyCheckers[i].j + 2 >= 0) && (MyCheckers[i].i - 2 <= 7) && (MyCheckers[i].j + 2 <= 7) && (Desk[MyCheckers[i].i - 2][MyCheckers[i].j + 2] == 0)) {
                            if (Desk[MyCheckers[i].i - 2][MyCheckers[i].j + 2] == 0) {
                                return true;
                            }
                        }
                    }
                }

                if ((MyCheckers[i].i + 1 >= 0) && (MyCheckers[i].j - 1 >= 0) && (MyCheckers[i].i + 1 <= 7) && (MyCheckers[i].j - 1 <= 7)) {
                    if (Desk[MyCheckers[i].i + 1][MyCheckers[i].j - 1] == EnemyPlayerID) {
                        if ((MyCheckers[i].i + 2 >= 0) && (MyCheckers[i].j - 2 >= 0) && (MyCheckers[i].i + 2 <= 7) && (MyCheckers[i].j - 2 <= 7) && (Desk[MyCheckers[i].i + 2][MyCheckers[i].j - 2] == 0)) {
                            if (Desk[MyCheckers[i].i + 2][MyCheckers[i].j - 2] == 0) {
                                return true;
                            }
                        }
                    }
                }

            }
        }
        return false;
    }
