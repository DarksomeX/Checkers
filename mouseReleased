public void mouseReleased(MouseEvent e) {
        if (GameEnd != true) {
            if (MyTurn) {
                int x = e.getX();
                int y = e.getY();
                if (DragIndex >= 0) {

                    if (getCellfromCoordinates(x, y)
                            && CellIsDark()
                            && CellIsFree()
                            && (KingAttack() || Attack() || Move())) {

                        MyCheckers[DragIndex].x = DeskX * size + size / 2;
                        MyCheckers[DragIndex].y = DeskY * size + size / 2;
                        Desk[MyCheckers[DragIndex].i][MyCheckers[DragIndex].j] = 0;
                        MyCheckers[DragIndex].i = DeskX;
                        MyCheckers[DragIndex].j = DeskY;
                        Desk[DeskX][DeskY] = MyPlayerID;
                        if (DeskY == 0) {
                            MyCheckers[DragIndex].isKing = true;
                        }
                        if (Move0Attack1 == 1) {
                            if (AttackExistCurrentChecker() == false) {
                                MyTurn = false;
                                Move0Attack1 = -1;
                                Die();
                                sizeDying = 0;
                                if (EnemyLose()) {
                                    FullGameEnd = true;
                                    GameEnd = true;
                                    playerWin = MyPlayerID;
                                    IWin = true;
                                    SendPacket();
                                    repaint();
                                    return;
                                } else {
                                    SendPacket();
                                }

                            }
                        } else {
                            MyTurn = false;
                            Move0Attack1 = -1;
                            Die();
                            sizeDying = 0;
                            SendPacket();
                        }

                    } else {

                        MyCheckers[DragIndex].x = MyCheckers[DragIndex].i * size + size / 2;
                        MyCheckers[DragIndex].y = MyCheckers[DragIndex].j * size + size / 2;

                    }
                    AllowToDrag = false;
                    DragIndex = -1;
                }
                if (MyTurn) {
                    SendPacket();
                }
                repaint();
            }
        }
    }
